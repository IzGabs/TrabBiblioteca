@using Anime.Models;
@model List<Animes>

@*Comentariosupervalidobolado*@
<!-- aaaaaaaaaaaaaaaaa href="Url.Action("Detalhes", "Biblioteca", new { id = item.IDAnime }, null))" -->
@{
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "BibliotecaAnimes";
    List<Categoria> categorias = ViewBag.Categorias;
    <link href="~/Content2/css/kk.css" rel="stylesheet" />
}


<div id="Categorias" style="text-align:center;margin-bottom:40px">
    <ul class="nav nav-tabs">
        <li class="nav-item nav-link">
            Horror
        </li>
    </ul>
</div>

<script>

    // url Async requesting function
    function httpGetAsync(theUrl, callback) {
        // create the request object
        var xmlHttp = new XMLHttpRequest();

        // set the state change callback to capture when the response comes in
        xmlHttp.onreadystatechange = function () {
            if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
                callback(xmlHttp.responseText);
            }
        }

        // open as a GET call, pass in the url and set async = True
        xmlHttp.open("GET", theUrl, true);

        // call send with no params as they were passed in on the url string
        xmlHttp.send(null);

        return;
    }

    // callback for the top 8 GIFs of search
    function tenorCallback_search(responsetext) {
        // parse the json response
        var response_objects = JSON.parse(responsetext);

        top_10_gifs = response_objects["results"];

        // load the GIFs -- for our example we will load the first GIFs preview size (nanogif) and share size (tinygif)

        document.getElementById("preview_gif").src = top_10_gifs[0]["media"][0]["nanogif"]["url"];

        document.getElementById("share_gif").src = top_10_gifs[0]["media"][0]["tinygif"]["url"];

        return;

    }


    // function to call the trending and category endpoints
    function grab_data(anon_id) {
        // set the apikey and limit
        var apikey = "BPB9T1F75UXN";
        var lmt = 8;

        // test search term
        var search_term = "anime horror";

        // using default locale of en_US
        var search_url = "https://api.tenor.com/v1/search?tag=" + search_term + "&key=" +
            apikey + "&limit=" + lmt + "&anon_id=" + anon_id;

        httpGetAsync(search_url, tenorCallback_search);

        // data will be loaded by each call's callback
        return;
    }


    // callback for anonymous id -- for first time users
    function tenorCallback_anonid(responsetext) {
        // parse the json response
        var response_objects = JSON.parse(responsetext);

        anon_id = response_objects["anon_id"];

        user_anon_id = anon_id;

        // pass on to grab_data
        grab_data(anon_id);
    }

    // SUPPORT FUNCTIONS ABOVE
    // MAIN BELOW

    // if returning user, grab their stored  anonymous ID and jump directly to getting data
    // anon_id = <from cookies>
    // user_anon_id = anon_id;
    // grab_data(anon_id);

    // else first time user
    var url = "https://api.tenor.com/v1/anonid?key=" + "LIVDSRZULELA";

    // start the flow by getting a new anonymous id and having the callback pass it to grab_data
    httpGetAsync(url, tenorCallback_anonid);

</script>

<img id="preview_gif" src="" alt="" style="width:220px;height:164px;">


@foreach (var item in Model)
{
    if (ViewBag.Categoria == item.Categoria.DescCategoria)
    {
        <div class="seasonal">
            <div>
                <div class="title">
                    <p class="title-text btn btn-warning">
                        @item.NomeAnime
                    </p>
                </div>

            </div>
            <div class="prodsrc">
                <div class="producer">
                    <span>Estúdio : @item.Estudio</span>
                </div>
                <div class="eps">
                    <span>Episodios : @item.Duracao</span>
                </div>
                <span class="source">@item.Categoria</span>


            </div>

            <div class="genres" align="center">
                <div class="genres-inner">
                    <span class="genre">@item.Categoria</span>
                </div>

            </div>
            <div>
                <img src="~/Imagem/@item.Imagem" style="width:167px;height:242px; float:left " />

            </div>
            <div class="synopsis">
                <span class="preline">
                    @item.Descricao
                </span>
            </div>
            <br />
            <div class="information">
                <div class="info ">
                    @Html.ActionLink("Adicionar a Biblioteca", "AdicionarAoCarrinho", "Home",
                             new { id = item.IDAnime }, new { @class = "btn btn-warning" })
                </div>

                <div class="scor ">
                    @Html.ActionLink("Adicionar a Assistidos", "AdicionarAssistidos", "Biblioteca",
                             new { id = item.IDAnime }, new { @class = "btn btn-warning" })
                </div>
            </div>
        </div>

    }


}